---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Bio from '../../components/Bio.astro';
import { markdown } from '@astropub/md';
import moment from 'moment';

export async function getStaticPaths() {
  // 本地获取
  // const posts = await Astro.glob('../../data/blog-posts/*.md');
  // 网络获取
  const fetchPosts = await fetch('https://blog.admin.pointfree.cn/api/posts?populate[0]=categories&populate[1]=cover').then(res => res.json());
  // debugger;
  // 这里 return 的东西，可以在下面接收到
  return fetchPosts.data.map(post => ({
    params: { slug: post.attributes.slug },
    props: { post }
  }));
}

const { title, content, slug, excerpt, publishedAt, cover, categories } = Astro.props.post.attributes; // 这里对应 getStaticPaths 中的 return
const permalink = `${Astro.site.href}blog/${slug}`;
const contentRes = await markdown(content);
// 匹配所有标题的正则
let reg = /(#{1,6})\s(.*)/g;
// let reg = /(?<!`)(#(?:#|[^#\n])*)/;
// 匹配到的所有标题
let titleArr = content.match(reg);
// 将匹配结果中的#替换成对应的html标签
let replacedTitleArr = titleArr.map(item => {
  return item.replace(reg, (match, p0, p1) => {
    let fontSize = '',
      marginLeft = '';
    let anchorPointContent = p1;
    switch (p0.length) {
      case 1:
        fontSize = '0.9rem';

        break;
      case 2:
        fontSize = '0.9rem';
        marginLeft = '15px';
        break;
      case 3:
        fontSize = '0.9rem';
        marginLeft = '15px';
        break;
      case 4:
        fontSize = '0.9rem';
        marginLeft = '15px';
        break;
      case 5:
        fontSize = '0.9rem';
        marginLeft = '15px';
        break;
      case 6:
        fontSize = '0.9rem';
        marginLeft = '15px';
        break;
    }
    if (anchorPointContent.indexOf('</span>') !== -1) anchorPointContent = anchorPointContent.replace('</span>', '').replace(/<span(([\s\S])*?)>/g, ''); // 过滤其他标签
    return `<a href="#${anchorPointContent.toLowerCase().replace(/[\s]/g, '-').replace(/[:：]/g, '')}" style="display: block;width: 215px;font-size:${fontSize};overflow: hidden;white-space: nowrap;text-overflow: ellipsis;padding:0 20px;margin-left:${marginLeft}"><div style="width: 100%">${p1}</div></a>`;
  });
});
const navRes = await markdown(replacedTitleArr.join('\n'));
console.log('result', navRes);
---

<!-- <script define:vars={{content}}>

</script> -->
<BaseLayout title={title} description={excerpt} permalink={permalink} current="blog">
  <div class="container-wrap">
    <nav class="nav">
      {navRes}
    </nav>
    <div class="center-content">
      <header>
        <h1>{title}</h1>
        <div class="header-detail">
          <div>{moment(publishedAt).format('YYYY-MM-DD')}</div>
          {categories.data.length ? <div class="header-line" /> : null}
          <div class="header-tags">
            {
              categories.data.map(category => {
                return <a href={`/category/${category.attributes.name}`}>{category.attributes.name}</a>;
              })
            }
          </div>
        </div>
        <div class="header-image">
          <div style={{ width: '80%', height: '30em', background: `url(https://blog.admin.pointfree.cn${cover.data[0].attributes.url})`, 'background-size': '100% 100%', 'background-repeat': 'no-repeat' }}></div>
        </div>
      </header>
      <article class="content">
        {contentRes}
      </article>
      <hr />
      <Bio />
    </div>
  </div>
</BaseLayout>

<style>
  .container-wrap {
    width: 100%;
    height: 100%;
  }

  .nav {
    position: absolute;
    left: 0;
    top: 0;
    width: 250px;
    height: 100%;
    overflow: scroll;
    border: 1px solid #eee;
  }

  .center-content {
    margin-left: 250px;
    height: 100%;
    overflow: scroll;
  }

  header {
    text-align: center;
  }

  header .header-detail {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 1rem;
  }

  .header-detail .header-line {
    width: 1px;
    height: 1em;
    background: var(--text-secondary);
    margin: 0 1rem;
  }

  .header-detail .header-tags a {
    margin-right: 1rem;
  }

  header .header-image {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    margin-bottom: 1em;
  }

  header h1 {
    margin-bottom: 0.7em;
  }

  header p {
    color: var(--text-secondary);
    text-transform: uppercase;
    font-family: var(--font-family-sans);
    font-weight: 600;
  }

  header hr {
    min-width: 100px;
    width: 30%;
  }
</style>
